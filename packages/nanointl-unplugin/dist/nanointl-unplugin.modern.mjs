import{createUnplugin as n}from"unplugin";import i from"fs/promises";import{resolve as o}from"path";const e=n(n=>{if(!n.localesDir)throw new Error('[@nanointl/unplugin] "localesDir" is a required option');if(!n.defaultLocale)throw new Error('[@nanointl/unplugin] "defaultLocale" is a required option');return{name:"@nanointl/unplugin",resolveInclude:n=>"@nanointl/unplugin/runtime"===n,resolveId(n){if("@nanointl/unplugin/runtime"===n)return"@nanointl/unplugin/runtime"},loadInclude:n=>!!(n.includes("@nanointl/unplugin/dist/runtime.mjs")||n.includes("@nanointl/unplugin/dist/runtime.js")||n.includes("/nanointl-unplugin/dist/runtime.mjs")||n.includes("/nanointl-unplugin/dist/runtime.js")||"@nanointl/unplugin/runtime"===n),async load(){var e;const r=null!=(e=process.env.LOCALE)?e:n.defaultLocale,t=await i.readdir(n.localesDir);if(!t.length)return void this.error(`No locales was found in ${n.localesDir}`);if(!t.includes(`${r}.json`))return void this.error(`Locale ${r} (was searching for "${r}.json") was not found in ${n.localesDir}`);for(const i of t)this.addWatchFile(o(n.localesDir,i));const l=o(n.localesDir,`${r}.json`),s=t.map(i=>{const e=i.split(".").slice(0,-1).join("."),r=o(n.localesDir,i);return`[${JSON.stringify(e)}]: () => import(${JSON.stringify(r)}).then(x => x.default)`});return`\n        export const initLocale = ${JSON.stringify(r)};\n        import _initMessages from ${JSON.stringify(l)};\n        export const initMessages = _initMessages;\n        export const loadMessages = { ${s.join(", ")} };\n      `}}}),r=e.vite,t=e.rollup,l=e.webpack,s=e.esbuild;export{s as nanointlEsbuildPlugin,t as nanointlRollupPlugin,r as nanointlVitePlugin,l as nanointlWebpackPlugin,e as unplugin};
//# sourceMappingURL=nanointl-unplugin.modern.mjs.map
